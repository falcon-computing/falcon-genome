#!/usr/bin/env python
import argparse
import json
from fcs_manager import QueueManager
from subprocess import call

# argument settings
parser = argparse.ArgumentParser(description='Samplesheet handler')

parser.add_argument('-i', '--log-path', dest='log_path', nargs='?',
                     default='', help='path to logging message')

parser.add_argument('-d', '--root-dir', dest='root_dir', nargs='?',
                     default='./', help='root dir')

parser.add_argument('--in_queue', dest='in_queue', nargs='?',
                     type=int, default=1028, help='id of the ssheet queue')

parser.add_argument('--out_queue', dest='out_queue', nargs='?',
                     type=int, default=1029, help='id of the demux queue')

args = parser.parse_args()

class SsheetManager(QueueManager):
  def worker_func(self, msg):
    data = json.loads(msg)
    self.logger.info('start a new sample sheet task:')
    self.logger.info('run_id: ' + data['run_id'] + ' ' +
                'run_folder: '+ data['run_folder'])
    ret = call([self.dir + '/ssheet-agent',
            data['run_id'],
            data['run_folder']])
  
    # check the return signal 
    if ret == 0:
      self.logger.info('finished getting sample sheet for '+ data['run_id'])
      self.qout.send(msg)
    else:
      self.logger.error('failed to get sample sheet for '+ data['run_id'])
      self.checkpoint(data['run_id']+'.json', msg)

q = SsheetManager(name = "Samplesheet Manager",
      log_path = args.log_path,
      qin_id = args.in_queue,
      qout_id = args.out_queue,
      num_workers = 128)
q.listen()
